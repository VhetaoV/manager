<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vueserver.manager.dao.ArticleDao">
  <resultMap id="BaseResultMap" type="com.vueserver.manager.entity.Article">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="readings" jdbcType="INTEGER" property="readings" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.vueserver.manager.entity.Article">
    insert into article (id, title, author, 
      createDate, readings, `status`, 
      content)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{readings,jdbcType=INTEGER}, #{status,jdbcType=BIT}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.vueserver.manager.entity.Article">
    update article
    set title = #{title,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      readings = #{readings,jdbcType=INTEGER},
      `status` = #{status,jdbcType=BIT},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, title, author, createDate, readings, `status`, content
    from article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, title, author, createDate, readings, `status`, content
    from article
  </select>
  <select id="selectByPage" resultMap="BaseResultMap">
    select id, title, author, createDate, readings, `status`, content
    from article
    where 1=1
    <if test="title != null">
      and title = #{title}
    </if>
  </select>

</mapper>